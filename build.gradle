plugins {
    id 'org.springframework.boot' version '2.6.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.example'
version = '0.0.1.txt-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework:spring-web:5.3.16'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    filter {
        includeTestsMatching "GradleTestsApplicationTests.stringsAreNotEqual"
    }
    testLogging.showStandardStreams = true
}

task copyFiles(type: CopyFilesTask) {
    sourceDirectory = from
    destinationDirectory = to
}

task cloneGit(type: CloneGitTask) {
    uri = gitURI
    directory = gitCloneDirectory
}

task cloneGit2 {
    doLast {
        if (project.hasProperty("directoryProp") && project.hasProperty("uriProp")) {
            exec {
                workingDir directoryProp
                executable 'git'
                args 'clone', uriProp
            }
        } else {
            throw new InvalidUserDataException("Cannot perform without properties")
        }
    }
}

task cloneGit3(type: Exec) {
    workingDir "gitClone"
    commandLine 'git', 'clone', 'https://github.com/akuma1341/calculator.git'
}

tasks.register('copy', Copy) {
    if (project.hasProperty("sourceProp") && project.hasProperty("destinationProp")) {
        from(sourceProp)
        into(destinationProp)
    } else {
        throw new InvalidUserDataException("Cannot perform without properties")
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
